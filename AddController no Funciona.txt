
package controller;

import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import model.Conectar;
import model.Pais;
import model.Persona;
import model.PersonaValidation;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.support.SessionStatus;
//import org.springframework.web.portlet.ModelAndView;
import org.springframework.web.servlet.ModelAndView;

@Controller
@RequestMapping("add.htm")
public class AddController {
    
    /*
    @RequestMapping("/")
    public String home(Model model) {
    model.addAttribute("empleado", new Persona());
    return "home";
    }*/
    
    private PersonaValidation personaValidacion;
    private JdbcTemplate jdbcTemplate;
    
    public AddController() {
        this.personaValidacion=new PersonaValidation();
        Conectar con= new Conectar();
        this.jdbcTemplate=new JdbcTemplate(con.conectar());
    }
    
    //Para coger y poner los datos
    //Del objeto que añado como persona ( mav.addObject("persona"....) voy a coger sus parametros en el path del formulario
    //ejemplo path="nombre"  se tiene que llamar igual que el atributo de la clase Persona .. per.nombre
    //que se le paso al modelo en ...mav.addObject("persona", per);
    @RequestMapping(method = RequestMethod.GET)
    public ModelAndView form(){
        Persona per=new Persona();
        Pais pais=new Pais();
        per.setFecha(per.getFechalocal());
        ModelAndView mav=new ModelAndView();
        
        //Esto es para que salgan los paises que estan en la base de datos en el select
        String sql="SELECT * FROM paises";
        List tablaPaises=this.jdbcTemplate.queryForList(sql);
        List<Map<String,Object>> datos= this.jdbcTemplate.queryForList(sql);
        LinkedHashMap<String,String>paises= new LinkedHashMap<>();
        for(int i=0;i<datos.size();i++){
            paises.put(""+datos.get(i).get("idPais"),""+datos.get(i).get("nombrePais"));
        }
        
        mav.setViewName("add");
        mav.addObject("persona", per);
        mav.addObject("nombrePais", pais);
        mav.addObject("listaPaises",paises);//Este es el que sale en el desplegable "Select......"
        mav.addObject("tablaPaises",tablaPaises); //Este es el que sale en la tabla del modal
        return mav;
    }
    
    /*
    @InitBinder
    public void initBinder(final WebDataBinder binder) {
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
    dateFormat.setLenient(false);
    binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, true));
    }
    */
    
    //recibio y valido los datos del formulario
    //actualizo la tabla
    
    //Para coger y poner los datos
    //Del objeto que añado como persona ( mav.addObject("persona"....) voy a coger sus parametros en el path del formulario
    //ejemplo path="nombre"  se tiene que llamar igual que el atributo de la clase Persona .. per.nombre
    //que se le paso al modelo en ...mav.addObject("persona", per);
    @RequestMapping(method = RequestMethod.POST)
    public ModelAndView form
        (
                @ModelAttribute("persona")Persona p,
                @ModelAttribute("pais")Pais pais,
                BindingResult result,
                SessionStatus status
        )
    {
        
        this.personaValidacion.validate(p, result);
        if(result.hasErrors()){
            ModelAndView mav = new ModelAndView();
            
            //Esto es para que salgan los paises que estan en la base de datos en el select
            String sql = "SELECT * FROM paises";
            List<Map<String, Object>> datos = this.jdbcTemplate.queryForList(sql);
            LinkedHashMap<String, String> paises = new LinkedHashMap<>();
            for (int i = 0; i < datos.size(); i++) {
                paises.put("" + datos.get(i).get("idPais"), "" + datos.get(i).get("nombrePais"));
            }
            mav.setViewName("add");
            mav.addObject("persona", new Persona());
            mav.addObject("nombrePais", new Pais());
            mav.addObject("listaPaises",paises);//Este es el que sale en el desplegable "Select......"
            return mav;
        }else{
            String sql="insert into usuarios (nombre,email,edad,fechaNac,pais)values(?,?,?,?,?)";
            this.jdbcTemplate.update(sql, p.getNombre(),p.getCorreo(),p.getEdad(),p.getFecha(),nombrePaisPorId(Integer.parseInt(p.getPais())));
            
            String sql2="insert into paises (nombrePais)values(?)";
            this.jdbcTemplate.update(sql2, pais.getNombrePais());
            
            return new ModelAndView("redirect:/home.htm");
        }
    }
    public String nombrePaisPorId(int a){
        //Para agregar el nombre del pais tengo que encontrar 1ro el pais en la tabla de paises
        String sqlPais = "SELECT * FROM paises WHERE idPais='" +a+"'";
        List<Map<String,Object>> datos= this.jdbcTemplate.queryForList(sqlPais);
        String paise= ""+(datos.get(0).get("nombrePais"));
        return paise;
    }
        
    @ModelAttribute("paisLista")
    //pais.put(Valor que coje en la base Datos, Valor que muestra la pagina)
    public Map<String,String>listadoDePaises(){
        String sql="SELECT * FROM paises";
        List<Map<String,Object>> datos= this.jdbcTemplate.queryForList(sql);
        LinkedHashMap<String,String>paises= new LinkedHashMap<>();
        for(int i=0;i<datos.size();i++){
            paises.put(""+datos.get(i).get("idPais"),""+datos.get(i).get("nombrePais"));
        } 
        return paises;
    }
        
//    //metodo para poblar el select
//    @ModelAttribute("paisListaPaises")
//    //pais.put(Valor que coje en la base Datos, Valor que muestra la pagina)
//    public Map<String,String>listadoDePaises(){
//        Map<String,String>pais= new LinkedHashMap<>();
//        pais.put("Cuba","Cuba");
//        pais.put("México","México");
//        pais.put("Colombia","Colombia");
//        pais.put("España","España");
//        pais.put("Suecia","Suecia");
//        return pais;
//    }
    
}
